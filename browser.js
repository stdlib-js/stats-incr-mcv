// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var t,e;t=this,e=function(){"use strict";var t="function"==typeof Object.defineProperty?Object.defineProperty:null,e=Object.defineProperty,r=Object.prototype,n=r.toString,o=r.__defineGetter__,i=r.__defineSetter__,u=r.__lookupGetter__,a=r.__lookupSetter__,f=function(){try{return t({},"x",{}),!0}catch(t){return!1}}()?e:function(t,e,f){var l,c,y,p;if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. First argument must be an object. Value: `"+t+"`.");if("object"!=typeof f||null===f||"[object Array]"===n.call(f))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+f+"`.");if((c="value"in f)&&(u.call(t,e)||a.call(t,e)?(l=t.__proto__,t.__proto__=r,delete t[e],t[e]=f.value,t.__proto__=l):t[e]=f.value),y="get"in f,p="set"in f,c&&(y||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return y&&o&&o.call(t,e,f.get),p&&i&&i.call(t,e,f.set),t};function l(t,e,r){f(t,e,{configurable:!1,enumerable:!1,writable:!1,value:r})}function c(t){return"number"==typeof t}var y="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function p(){return y&&"symbol"==typeof Symbol.toStringTag}var b=Object.prototype.toString,s=Object.prototype.hasOwnProperty,d="function"==typeof Symbol?Symbol.toStringTag:"",v=p()?function(t){var e,r,n,o,i;if(null==t)return b.call(t);r=t[d],i=d,e=null!=(o=t)&&s.call(o,i);try{t[d]=void 0}catch(e){return b.call(t)}return n=b.call(t),e?t[d]=r:delete t[d],n}:function(t){return b.call(t)},_=Number,m=_.prototype.toString,N=p();function h(t){return"object"==typeof t&&(t instanceof _||(N?function(t){try{return m.call(t),!0}catch(t){return!1}}(t):"[object Number]"===v(t)))}function g(t){return c(t)||h(t)}l(g,"isPrimitive",c),l(g,"isObject",h);var j=Number.POSITIVE_INFINITY,w=_.NEGATIVE_INFINITY,O=Math.floor;function S(t){return t<j&&t>w&&O(e=t)===e;var e}function T(t){return c(t)&&S(t)}function A(t){return h(t)&&S(t.valueOf())}function F(t){return T(t)||A(t)}function I(t){return T(t)&&t>0}function E(t){return A(t)&&t.valueOf()>0}function P(t){return I(t)||E(t)}function k(t){return t!=t}l(F,"isPrimitive",T),l(F,"isObject",A),l(P,"isPrimitive",I),l(P,"isObject",E);var V=Math.sqrt,x="function"==typeof Float64Array,G="function"==typeof Float64Array?Float64Array:null,C="function"==typeof Float64Array?Float64Array:void 0,M=function(){var t,e,r;if("function"!=typeof G)return!1;try{e=new G([1,3.14,-3.14,NaN]),r=e,t=(x&&r instanceof Float64Array||"[object Float64Array]"===v(r))&&1===e[0]&&3.14===e[1]&&-3.14===e[2]&&e[3]!=e[3]}catch(e){t=!1}return t}()?C:function(){throw new Error("not implemented")};function Y(){var t,e=arguments,r=e[0],n="https://stdlib.io/e/"+r+"?";for(t=1;t<e.length;t++)n+="&arg[]="+encodeURIComponent(e[t]);return n}return function(t,e){var r,n,o,i,u,a,f,l;if(!I(t))throw new TypeError(Y("0dk8T",t));if(n=new M(t),f=t-1,i=0,l=-1,a=0,arguments.length>1){if(!c(e))throw new TypeError(Y("0dkA8",e));return u=e,p}return u=0,y;function y(e){var c,y;if(0===arguments.length)return 0===a?null:1===a?k(i)?NaN:0/u:a<t?V(i/(a-1))/u:V(i/f)/u;if(l=(l+1)%t,k(e))a=t,u=NaN,i=NaN;else{if(a<t)return n[l]=e,i+=(r=e-u)*(e-(u+=r/(a+=1))),1===a?0/u:V(i/(a-1))/u;if(1===a)return(i=0)/(u=e);if(k(n[l])){for(a=1,u=e,i=0,c=0;c<t;c++)if(c!==l){if(k(y=n[c])){a=t,u=NaN,i=NaN;break}i+=(r=y-u)*(y-(u+=r/(a+=1)))}}else!1===k(i)&&(o=n[l],i+=(r=e-o)*(o-u+(e-(u+=r/t))))}return n[l]=e,V(i/f)/u}function p(e){var f;if(0===arguments.length)return 0===a?null:a<t?V(i/a)/u:V(i/t)/u;if(l=(l+1)%t,k(e))a=t,i=NaN;else{if(a<t)return n[l]=e,V((i+=(r=e-u)*r)/(a+=1))/u;if(k(n[l])){for(i=0,f=0;f<t;f++)if(f!==l){if(k(n[f])){a=t,i=NaN;break}r=n[f]-u,i+=r*r}}else!1===k(i)&&(o=n[l],i+=(e-o)*(e-u+o-u))}return n[l]=e,V(i/t)/u}}},"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).incrmcv=e();
//# sourceMappingURL=browser.js.map
